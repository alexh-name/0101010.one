: multiple hostapd instances

Some times, you want to run multiple instances of the same service, so that they can serve different purposes, run with different configs loaded, etc. 
I need to run two instances of hostapd for two reasons:

* I want two use two different adapters, to have two different APs
* one adapter needs a special hostapd-binary to function

Let's start: We go into /etc/init.d/ and copy the script for hostapd that's already there to - let's say - hostapd2. Then, we edit it. There's not much to be done:

====
cd /etc/init.d
cp hostapd hostapd2
nvi hostapd2
====

Since the newest version of the script is really nicely written, all we need to alter is:

====
< command="/usr/sbin/hostapd"
---
> command="/usr/sbin/hostapd2"
====

Now we need to make sure that there is a config the script can read. It will search for it according it's own name: "hostapd2". We go to /etc/conf.d/ and copy and edit once again what's already there:

====
cd /etc/conf.d
cp hostapd hostapd2
nvi hostapd2
====

Here you'll want to specify the interface to be used and to specify the actual config being used by this hostapd instance:

====
# Space separated List of interfaces which needs to be started before
# hostapd
INTERFACES="wlan1"
 
# Space separated list of configuration files
CONFIGS="/etc/hostapd/hostapd2.conf"
 
# Extra options to pass to hostapd, see hostapd(8)
OPTIONS=""
====

Now we make sure that there's actually something to execute where we told the service script to look for. We go to /usr/sbin/ and now it's up to you. If it's sufficent for you to run the same binary twice, you just need to set a symbolic link. If you need another binary, place it there:

====
cd /usr/sbin/
ln -s hostapd hostapd2
====

or:

====
cp /usr/src/hostapd-rt8192cu/hostapd hostapd2
====

And now, to add it to your rc, as always:

====
rc-update add hostapd2
=====