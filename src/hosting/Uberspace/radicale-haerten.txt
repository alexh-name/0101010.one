: radicales Crypto härten

:: Noch kein aktuelles OpenSSL installiert?

Das brauchen wir später, um stärke Cipher nutzen zu können.
Hier setze ich toast voraus [1]. Wenn schon ein neueres OpenSSL installiert ist als das hier von mir vorgeschlagene, kann mit dem nächsten Punkt weitergemacht werden.
Die Version kann mit

====
openssl version
====

ausgegeben werden.

====
toast status openssl || toast arm https://www.openssl.org/source/openssl-1.0.1l.tar.gz && openssl version
====

Hier sollte nun "OpenSSL 1.0.1l 15 Jan 2015" ausgegeben werden.

:: neuestes TLS-Protokoll nutzen

Dafür müssen wir erst sicher gehen, dass radicale mindestens python2.7.9 nutzt [2]. Da Uberspace python3 mitbringt und radicale es auch unterstützt, nehmen wir einfach das.

Ich habe radicale.py nach ~/bin/ und die config nach ~/etc/radicale/ gelegt. Bitte adaptieren wie nötig:

====
sed -i -e 's/\/usr\/bin\/env\ python.*/\/usr\/bin\/env\ python3/' ~/bin/radicale.py \
&& sed -i -e 's/protocol\ =\ .*/protocol\ =\ PROTOCOL_TLSv1_2/' ~/etc/radicale/config
====

:: staerkere Cipher nutzen

An dieser Stelle wäre es schön, wenn wir Cipher für PFS nutzen könnten. Das ist ohne einen Eingriff in radicale selbst wohl aber nicht möglich. Wir könnten die verschiedenen  Diffie-Hellman-Ciphers auch einfach mit in die Liste nehmen, es würde an dieser Stelle aber nichts anderes bewirken, als jede Client-Server Kommunikation zu verlangsamen. Deshalb entscheide ich mich hier dafür, nur auf die nächststärkeren Cipher zurückzugreifen:

====
CIPHERS="$(openssl ciphers -tls1 \!DHE:\!EDH:\!DH:\!ECDHE:\!EECDH:\!ECDH:\!SRP:\!PSK:HIGH+AES256)" \
&& sed -i -e "s/ciphers\ =\ .*/ciphers\ =\ "$CIPHERS"/" ~/etc/radicale/config ; echo "$CIPHERS"
====

Das kurze Skript sollte am Ende die gefundenen unterstützten Cipher ausgeben. Das sollte etwa so aussehen:

====
AES256-GCM-SHA384:AES256-SHA256:AES256-SHA
====

Jetzt noch den Dienst neustarten!

[1] https://wiki.uberspace.de/system:toast
[2] https://docs.python.org/2/library/ssl.html#ssl.PROTOCOL_TLSv1_2